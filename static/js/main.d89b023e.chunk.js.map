{"version":3,"sources":["components/Wrapper/Wrapper.js","components/icons/FlagIcon/FlagIcon.js","components/icons/TrashIcon/TrashIcon.js","components/Pokemon/Pokemon.js","components/Main/Main.js","components/Footer/Footer.js","components/Navigation/Navigation.js","components/Header/Header.js","components/SelectedItems/SelectedItems.js","components/PageNotFound/PageNotFound.js","utils/constants.js","components/DetailedPokemonInfo/DetailedPokemonInfo.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Wrapper","props","className","children","FlagIcon","TrashIcon","Pokemon","card","mainpage","favorite","addToFavorites","useState","isSelected","setSelected","cardInfoText","onClick","prev","to","name","src","picture","alt","type","height","weight","description","uniqid","require","Main","pokemonsList","favorites","onSelectButtonClick","map","item","some","it","Footer","rel","target","href","Navigation","showMenu","location","useLocation","pathname","Header","setShowMenu","SelectedItems","cards","length","PageNotFound","DetailedPokemonInfo","useParams","filter","App","useEffect","localStorage","clear","favoriteCards","setFavoriteCards","setSelectedPokemons","favoritesList","getItem","JSON","parse","newFavoritesList","setItem","stringify","push","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d89b023e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Wrapper.css';\r\n\r\nfunction Wrapper(props) {\r\n  return (\r\n   <div className={`wrapper ${props.className}`}>\r\n       {props.children}\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './FlagIcon.css';\r\n\r\nfunction FlagIcon() {\r\n    return (\r\n        <div className=\"flag\">\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlagIcon;","import React from 'react';\r\nimport './TrashIcon.css';\r\n\r\nfunction TrashIcon() {\r\n    return (\r\n        <div className=\"trash\">\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrashIcon;","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Pokemon.css';\r\nimport FlagIcon from '../icons/FlagIcon/FlagIcon';\r\nimport TrashIcon from '../icons/TrashIcon/TrashIcon';\r\n\r\nfunction Pokemon({ card, mainpage, favorite, addToFavorites }) {\r\n    const [isSelected, setSelected] = useState(favorite);\r\n\r\n    /*функция для добавления и удаления покемонов из списка избранных */\r\n    function handleSelectButton() {\r\n        addToFavorites(card);\r\n        setSelected(prev => !prev);\r\n    }\r\n\r\n    let cardInfoText = \"\";\r\n    isSelected ? cardInfoText = \"Убрать из избранных\" : cardInfoText = \"Добавить в избранное\";\r\n\r\n    return (\r\n        <section className=\"card\">\r\n            <button className=\"card__flag-icon\" onClick={handleSelectButton}>{!isSelected ? <FlagIcon /> : <TrashIcon />}</button>\r\n            <div className=\"card__info-text\">\r\n                {cardInfoText}\r\n            </div>\r\n            <Link to={`pokemons/${card.name}`}>\r\n            <img className=\"card__image\" src={card.picture} alt=\"Изображение покемона\" />\r\n            <div className=\"card__group\">\r\n                <h2 className=\"card__heading\">{card.name}</h2>\r\n                {!mainpage && <p className=\"card__info\">{`тип: ${card.type}`}</p>}\r\n                {!mainpage && <p className=\"card__info\">{`высота: ${card.height}`}</p>}\r\n                {!mainpage && <p className=\"card__info\">{`вес: ${card.weight}`}</p>}\r\n                {!mainpage && <p className=\"card__text\">{card.description}</p>}\r\n            </div>\r\n            </Link>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Pokemon from '../Pokemon/Pokemon';\r\nimport './Main.css';\r\nvar uniqid = require('uniqid');\r\n\r\nfunction Main({ pokemonsList, favorites, onSelectButtonClick }) {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <main className=\"main-page\">\r\n        <ul className=\"pokemons\">\r\n          {pokemonsList && pokemonsList.map((item) =>\r\n            (<Pokemon mainpage={true} key={uniqid()} card={item} favorite={favorites.some(it => it.name === item.name)} addToFavorites={(card) => onSelectButtonClick(card)}></Pokemon>))\r\n          }\r\n        </ul>\r\n      </main>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <Wrapper>\r\n            <footer className=\"footer\">\r\n                <p className=\"footer__copyright\">&copy;2021&nbsp;Natalia&nbsp;Pavlova</p>\r\n                <div className=\"footer__links-group\">\r\n                    <div className=\"footer__links\">\r\n                        <Link className=\"footer__link\" to=\"/\">Главная</Link>\r\n                    </div>\r\n                    <div className=\"footer__icons\">\r\n                        <a className=\"footer__icon footer__icon_type_github\" rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/natalja1912\"></a>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport './Navigation.css';\r\n\r\nfunction Navigation({ showMenu }) {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <nav className={`nav ${showMenu && `nav_active`}`}>\r\n            <Link to=\"/\" className={`nav__link ${location.pathname === '/' && `nav__link_type_active`}`}>Главная</Link>\r\n            <Link to=\"/my-collection\" className={`nav__link ${location.pathname === '/my-collection' && `nav__link_type_active`}`}>Избранное</Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport './Header.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nfunction Header() {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n\r\n    function handleMenuButton() {\r\n        setShowMenu(prev => !prev);\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <Wrapper className=\"wrapper_no-padding\">\r\n                <div className=\"header__group\">\r\n                    <div className=\"header__menu\">\r\n                        <Link to=\"/\" className='header__logo'>PokemonsApi</Link>\r\n                        <button className={`header__menu-button ${!showMenu && `header__menu-button_active`} ${showMenu && `header__menu-button_close`}`} onClick={handleMenuButton}></button>\r\n                    </div>\r\n                    <Navigation showMenu={showMenu} />\r\n                </div>\r\n            </Wrapper>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Pokemon from '../Pokemon/Pokemon';\r\nimport './SelectedItems.css';\r\n\r\nfunction SelectedItems({ cards, onSelectButtonClick }) {\r\n    return (\r\n        <Wrapper>\r\n            <main className=\"selected\">\r\n                <ul className=\"selected_pokemons\">\r\n                    {(cards.length > 0) &&\r\n                        cards.map((item) =>\r\n                            (<Pokemon mainpage={false} key={item.name} card={item} favorite={cards.some(it => it.name === item.name)} addToFavorites={(card) => onSelectButtonClick(card)}></Pokemon>))\r\n                    }\r\n                </ul>\r\n            </main>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default SelectedItems;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './PageNotFound.css';\r\n\r\nfunction PageNotFound () {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h3 className=\"not-found__title\">\r\n       <span>404</span> - Страница не найдена\r\n      </h3>\r\n      <img className=\"not-found__image\" src={'../images/404.svg'} alt=\"\"/>\r\n      <p className=\"not-found__text\">\r\n       Лучше 404 с кнопкой «Назад», чем журавль в небе.\r\n      </p>\r\n      <Link className=\"button button_type_to-main\" to=\"/\">Try Main Page</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageNotFound;","let pokemonsList = [\r\n  {\r\n    \"picture\": \"https://gabbyapp.com/pockemons/i/Bulbasaur.png\",\r\n    \"name\": \"Bulbasaur\",\r\n    \"description\": \"Бульбазавра можно увидеть дремлющим при ярком солнечном свете. На его спине есть семя. На солнце семя растет и становится больше.\",\r\n    \"height\": \"0.7 м\",\r\n    \"weight\": \"6.9 кг\",\r\n    \"type\": \"Seed\"\r\n  },\r\n  {\r\n    \"picture\": \"https://gabbyapp.com/pockemons/i/Pikachu.png\",\r\n    \"name\": \"Pikachu\",\r\n    \"description\": \"Всякий раз, когда Пикачу встречает что-то новое, то может поразить это электрическим разрядом. Если вы столкнетесь, например, с почерневшими ягодами - это прямое доказательство того, что Пикачу ошибочно принял их за что-то другое.\",\r\n    \"height\": \"0.4 м\",\r\n    \"weight\": \"6 кг\",\r\n    \"type\": \"Mouse\"\r\n  },\r\n  {\r\n    \"picture\": \"https://gabbyapp.com/pockemons/i/Venusaur.png\",\r\n    \"name\": \"Venusaur\",\r\n    \"description\": \"На спине Венузавра есть большой цветок. Он будет раскрашен в яркие цвета, если получит большое количество питательных веществ и солнечного света. Цветочный аромат успокаивает эмоции людей.\",\r\n    \"height\": \"2 м\",\r\n    \"weight\": \"100 кг\",\r\n    \"type\": \"Seed\"\r\n  },\r\n  {\r\n    \"picture\": \"https://gabbyapp.com/pockemons/i/Vulpix.png\",\r\n    \"name\": \"Vulpix\",\r\n    \"description\": \"Во время своего рождения Вульпикс имеет только один белый хвост. Позже хвост разделяется на шесть, если Покемон становится любимцем своего тренера. Шесть хвостов великолепно смотрятся и удобно сворачиваются.\",\r\n    \"height\": \"0.6 м\",\r\n    \"weight\": \"9.9 кг\",\r\n    \"type\": \"Fox\"\r\n  }\r\n]\r\n\r\nexport default pokemonsList;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport './DetailedPokemonInfo.css';\r\n\r\nfunction DetailedPokemonInfo({ pokemonsList }) {\r\n    const { name } = useParams();\r\n    const cards = pokemonsList.filter(item => item.name === name);\r\n    const card = cards[0];\r\n\r\n    return (\r\n        <Wrapper>\r\n            <section className=\"pokemon\">\r\n                <img className=\"pokemon__image\" src={card.picture} alt=\"Изображение покемона\" />\r\n                <div className=\"pokemon__group\">\r\n                    <h2 className=\"pokemon__heading\">{card.name}</h2>\r\n                    <p className=\"pokemon__text\">{`тип: ${card.type}`}</p>\r\n                    <p className=\"pokemon__text\">{`высота: ${card.height}`}</p>\r\n                    <p className=\"pokemon__text\">{`вес: ${card.weight}`}</p>\r\n                    <p className=\"pokemon__text\">{card.description}</p>\r\n                </div>\r\n            </section>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default DetailedPokemonInfo;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport SelectedItems from '../SelectedItems/SelectedItems';\nimport PageNotFound from '../PageNotFound/PageNotFound';\nimport pokemonsList from '../../utils/constants';\nimport DetailedPokemonInfo from '../DetailedPokemonInfo/DetailedPokemonInfo';\n\nfunction App() {\n  /*удаляем список избранных покемонов каждый раз при перезагрузке приложения */\n  useEffect(() => {\n    localStorage.clear();\n  }, []);\n\n  const [favoriteCards, setFavoriteCards] = useState([]);\n  /*функция для добавления и удаления покемонов из списка избранных */\n  function setSelectedPokemons(card) {\n    /*карточки выбранных покемонов хранятся в localStorage */\n    let favoritesList = localStorage.getItem('favorites');\n    if (!favoritesList || favoritesList.length === 0) {\n      localStorage.setItem('favorites', JSON.stringify([card]));\n      setFavoriteCards([card]);\n    }\n    else {\n      favoritesList = JSON.parse(favoritesList);\n      /*если карточка уже есть в списке избранных, удаляем ее */\n      if (favoritesList.some(item => item.name === card.name)) {\n        const newFavoritesList = favoritesList.filter(item => item.name !== card.name);\n        localStorage.setItem('favorites', JSON.stringify(newFavoritesList));\n        setFavoriteCards(newFavoritesList);\n      }\n      /*если карточки нет есть в списке избранных, добавляем ее */\n      else {\n        favoritesList.push(card);\n        localStorage.setItem('favorites', JSON.stringify(favoritesList));\n        setFavoriteCards(favoritesList);\n      }\n    }\n  }\n\n  return (\n    <div className=\"page\">\n      <main className=\"content\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Main favorites={favoriteCards} pokemonsList={pokemonsList} onSelectButtonClick={(card) => setSelectedPokemons(card)} />\n          </Route>\n          <Route path=\"/my-collection\">\n            <SelectedItems cards={favoriteCards} onSelectButtonClick={(card) => setSelectedPokemons(card)} />\n          </Route>\n          <Route path=\"/pokemons/:name\">\n            <DetailedPokemonInfo pokemonsList={pokemonsList} />\n          </Route>\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n        <Footer />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}